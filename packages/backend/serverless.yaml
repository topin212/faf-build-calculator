service: backend
frameworkVersion: "3"

plugins: 
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-central-1
  stage: dev
  profile: dev
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  helloworld:
    handler: src/index.lambdaHandler
    events:
      - http:
          path: helloworld
          method: get
          cors: true

custom:
  webpack:
    webpackConfig: './webpack.config.js' 
    includeModules: true
    packager: 'yarn' 
    excludeFiles: test/**/*.test.js 

package: 
  individually: true